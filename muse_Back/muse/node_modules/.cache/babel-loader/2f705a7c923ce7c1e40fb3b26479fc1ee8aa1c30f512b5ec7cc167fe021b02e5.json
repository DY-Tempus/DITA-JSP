{"ast":null,"code":"var _jsxFileName = \"C:\\\\jsp\\\\DITA-JSP\\\\muse_Back\\\\muse\\\\src\\\\components\\\\MusicPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport './css/MusicPlayer.css';\nimport Detail from './Detail';\nimport Volume from './Volume';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false); // 재생 상태 관리\n  const [isMute, setIsMute] = useState(false); // 음소거 상태 관리\n  const [currentTime, setCurrentTime] = useState(0); // 현재 재생 시간\n  const duration = 240; // 총 재생 시간 (초 단위)\n  const progressBarRef = useRef(null); // 진행바를 참조할 ref\n  const [isDragging, setIsDragging] = useState(false); // 드래그 상태 관리\n\n  const [isOverflowing, setIsOverflowing] = useState(false);\n  const titleRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // 텍스트가 넘치는지 확인하는 함수\n  const checkOverflow = () => {\n    if (titleRef.current && containerRef.current) {\n      const titleWidth = titleRef.current.scrollWidth;\n      const containerWidth = containerRef.current.offsetWidth;\n      setIsOverflowing(titleWidth > containerWidth); // 제목이 컨테이너보다 긴지 확인\n    }\n  };\n  useEffect(() => {\n    checkOverflow(); // 초기 로드 시 실행\n    window.addEventListener('resize', checkOverflow); // 윈도우 크기가 변경될 때마다 실행\n\n    return () => {\n      window.removeEventListener('resize', checkOverflow); // 크기 변경 이벤트 리스너 해제\n    };\n  }, []);\n\n  // 진행 바의 진행률을 계산\n  const progress = currentTime / duration * 100;\n\n  // 재생/정지 토글 함수\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  // 음소거 토글 함수\n  const toggleMute = () => {\n    setIsMute(!isMute);\n  };\n\n  // 클릭 또는 드래그 시 재생 위치 변경 함수\n  const handleProgressChange = e => {\n    const progressBar = progressBarRef.current;\n    const rect = progressBar.getBoundingClientRect();\n    const offsetX = e.clientX - rect.left; // 클릭한 x좌표 계산\n    const newProgress = offsetX / rect.width * duration; // 클릭한 위치에 따른 새 재생 시간 계산\n    setCurrentTime(newProgress); // 재생 시간을 업데이트\n  };\n  // 드래그 시작\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    handleProgressChange(e); // 첫 클릭 시 재생 위치 변경\n  };\n\n  // 드래그 중\n  const handleMouseMove = e => {\n    if (isDragging) {\n      handleProgressChange(e); // 마우스 이동 중에 재생 위치 업데이트\n    }\n  };\n\n  // 드래그 종료\n  const handleMouseUp = () => {\n    if (isDragging) {\n      setIsDragging(false);\n    }\n  };\n\n  // 마우스 업 이벤트 리스너 추가\n  useEffect(() => {\n    if (isDragging) {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging]);\n  const [isDetailOpen, setIsDetailOpen] = useState(false); // Detail 패널 상태 관리\n\n  const toggleDetail = () => {\n    setIsDetailOpen(!isDetailOpen);\n    //버튼 클릭시 Detail이 나옴\n  };\n  const [isVolumeVisible, setIsVolumeVisible] = useState(false); // 볼륨 패널 표시 상태\n  const [volume, setVolume] = useState(50); // 볼륨 상태 (0-100 범위)\n\n  const handleMouseEnter = () => {\n    // 볼륨 패널 보이기\n    setIsVolumeVisible(true);\n  };\n  const handleMouseLeave = () => {\n    // 볼륨 패널 숨기기\n    setIsVolumeVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-container\",\n      ref: progressBarRef,\n      onClick: handleProgressChange // 진행바 클릭 이벤트 추가\n      ,\n      onMouseDown: handleMouseDown // 드래그 시작\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-player\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/skip_previous.png\",\n          alt: \"Previous\",\n          className: \"control-button-extra\",\n          onClick: () => console.log('Previous clicked')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          // 재생, 멈춤 버튼\n          src: isPlaying ? \"/img/pause.png\" : \"/img/play.png\",\n          alt: isPlaying ? \"Pause\" : \"Play\",\n          className: \"control-button\",\n          onClick: togglePlayPause\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/skip_next.png\",\n          alt: \"Next\",\n          className: \"control-button-extra\",\n          onClick: () => console.log('Next clicked')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/album.jpg\",\n          alt: \"Album Art\",\n          className: \"album-art\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-details\",\n          ref: containerRef,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `track-title ${isOverflowing ? 'marquee' : ''}`,\n            children: \"Collide - Hellberg & Deutgen vs Splitbreed (Astronaut & Barely Alive Remix)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-extra\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/shuffle.png\",\n          alt: \"Shuffle\",\n          className: \"control-button-extra\",\n          onClick: () => console.log('Shuffle clicked')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/repeat.png\",\n          alt: \"Repeat\",\n          className: \"control-button-extra\",\n          onClick: () => console.log('Repeat clicked')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"volume-container\",\n          onMouseEnter: handleMouseEnter,\n          onMouseLeave: handleMouseLeave,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: isMute ? \"/img/mute.png\" : \"/img/volume.png\",\n            alt: isMute ? \"Mute\" : \"Volume\",\n            className: \"control-button-extra\",\n            onClick: toggleMute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), isVolumeVisible && /*#__PURE__*/_jsxDEV(Volume, {\n            volume: volume,\n            setVolume: setVolume,\n            onMouseEnter: handleMouseEnter // 마우스가 패널에 진입했을 때\n            ,\n            onMouseLeave: handleMouseLeave // 마우스가 패널을 떠났을 때\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/playlist.png\",\n          alt: \"Playlist\",\n          className: \"control-button-extra\",\n          onClick: () => console.log('Playlist clicked')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/info.png\",\n          alt: \"Info\",\n          className: \"control-button-extra\",\n          onClick: toggleDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Detail, {\n          isOpen: isDetailOpen,\n          setIsOpen: setIsDetailOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(MusicPlayer, \"YzLOebYkzYktuI7FY/T51ejU7V0=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Detail","Volume","jsxDEV","_jsxDEV","MusicPlayer","_s","isPlaying","setIsPlaying","isMute","setIsMute","currentTime","setCurrentTime","duration","progressBarRef","isDragging","setIsDragging","isOverflowing","setIsOverflowing","titleRef","containerRef","checkOverflow","current","titleWidth","scrollWidth","containerWidth","offsetWidth","window","addEventListener","removeEventListener","progress","togglePlayPause","toggleMute","handleProgressChange","e","progressBar","rect","getBoundingClientRect","offsetX","clientX","left","newProgress","width","handleMouseDown","handleMouseMove","handleMouseUp","isDetailOpen","setIsDetailOpen","toggleDetail","isVolumeVisible","setIsVolumeVisible","volume","setVolume","handleMouseEnter","handleMouseLeave","className","children","ref","onClick","onMouseDown","style","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","console","log","onMouseEnter","onMouseLeave","isOpen","setIsOpen","_c","$RefreshReg$"],"sources":["C:/jsp/DITA-JSP/muse_Back/muse/src/components/MusicPlayer.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport './css/MusicPlayer.css';\r\nimport Detail from './Detail'\r\nimport Volume from './Volume'\r\n\r\nconst MusicPlayer = () => {\r\n    const [isPlaying, setIsPlaying] = useState(false); // 재생 상태 관리\r\n    const [isMute, setIsMute] = useState(false); // 음소거 상태 관리\r\n    const [currentTime, setCurrentTime] = useState(0); // 현재 재생 시간\r\n    const duration = 240; // 총 재생 시간 (초 단위)\r\n    const progressBarRef = useRef(null); // 진행바를 참조할 ref\r\n    const [isDragging, setIsDragging] = useState(false); // 드래그 상태 관리\r\n\r\n    const [isOverflowing, setIsOverflowing] = useState(false);\r\n    const titleRef = useRef(null);\r\n    const containerRef = useRef(null);\r\n\r\n    // 텍스트가 넘치는지 확인하는 함수\r\n    const checkOverflow = () => {\r\n        if (titleRef.current && containerRef.current) {\r\n            const titleWidth = titleRef.current.scrollWidth;\r\n            const containerWidth = containerRef.current.offsetWidth;\r\n            setIsOverflowing(titleWidth > containerWidth); // 제목이 컨테이너보다 긴지 확인\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        checkOverflow(); // 초기 로드 시 실행\r\n        window.addEventListener('resize', checkOverflow); // 윈도우 크기가 변경될 때마다 실행\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', checkOverflow); // 크기 변경 이벤트 리스너 해제\r\n        };\r\n    }, []);\r\n\r\n    // 진행 바의 진행률을 계산\r\n    const progress = (currentTime / duration) * 100;\r\n\r\n    // 재생/정지 토글 함수\r\n    const togglePlayPause = () => {\r\n        setIsPlaying(!isPlaying);\r\n    };\r\n\r\n    // 음소거 토글 함수\r\n    const toggleMute = () => {\r\n        setIsMute(!isMute);\r\n    };\r\n\r\n    // 클릭 또는 드래그 시 재생 위치 변경 함수\r\n    const handleProgressChange = (e) => {\r\n        const progressBar = progressBarRef.current;\r\n        const rect = progressBar.getBoundingClientRect();\r\n        const offsetX = e.clientX - rect.left; // 클릭한 x좌표 계산\r\n        const newProgress = (offsetX / rect.width) * duration; // 클릭한 위치에 따른 새 재생 시간 계산\r\n        setCurrentTime(newProgress); // 재생 시간을 업데이트\r\n    };\r\n    // 드래그 시작\r\n    const handleMouseDown = (e) => {\r\n        setIsDragging(true);\r\n        handleProgressChange(e); // 첫 클릭 시 재생 위치 변경\r\n    };\r\n\r\n    // 드래그 중\r\n    const handleMouseMove = (e) => {\r\n        if (isDragging) {\r\n            handleProgressChange(e); // 마우스 이동 중에 재생 위치 업데이트\r\n        }\r\n    };\r\n\r\n    // 드래그 종료\r\n    const handleMouseUp = () => {\r\n        if (isDragging) {\r\n            setIsDragging(false);\r\n        }\r\n    };\r\n\r\n    // 마우스 업 이벤트 리스너 추가\r\n    useEffect(() => {\r\n        if (isDragging) {\r\n            window.addEventListener('mousemove', handleMouseMove);\r\n            window.addEventListener('mouseup', handleMouseUp);\r\n        } else {\r\n            window.removeEventListener('mousemove', handleMouseMove);\r\n            window.removeEventListener('mouseup', handleMouseUp);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('mousemove', handleMouseMove);\r\n            window.removeEventListener('mouseup', handleMouseUp);\r\n        };\r\n    }, [isDragging]);\r\n\r\n    const [isDetailOpen, setIsDetailOpen] = useState(false); // Detail 패널 상태 관리\r\n\r\n    const toggleDetail = () => {\r\n        setIsDetailOpen(!isDetailOpen);\r\n        //버튼 클릭시 Detail이 나옴\r\n    };\r\n\r\n    const [isVolumeVisible, setIsVolumeVisible] = useState(false); // 볼륨 패널 표시 상태\r\n    const [volume, setVolume] = useState(50); // 볼륨 상태 (0-100 범위)\r\n\r\n    const handleMouseEnter = () => { // 볼륨 패널 보이기\r\n        setIsVolumeVisible(true);\r\n    };\r\n    const handleMouseLeave = () => { // 볼륨 패널 숨기기\r\n        setIsVolumeVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"music-player-container\">\r\n            {/* ProgressBar 통합 */}\r\n            <div \r\n                className=\"progress-bar-container\" \r\n                ref={progressBarRef}\r\n                onClick={handleProgressChange} // 진행바 클릭 이벤트 추가\r\n                onMouseDown={handleMouseDown} // 드래그 시작\r\n            >\r\n                <div className=\"progress-bar\" style={{ width: `${progress}%` }}></div>\r\n            </div>\r\n\r\n            <div className=\"music-player\">\r\n                <div className=\"controls\">\r\n                    <img src=\"/img/skip_previous.png\" alt=\"Previous\" className=\"control-button-extra\" onClick={() => console.log('Previous clicked')} />\r\n                    <img // 재생, 멈춤 버튼\r\n                        src={isPlaying ? \"/img/pause.png\" : \"/img/play.png\"} \r\n                        alt={isPlaying ? \"Pause\" : \"Play\"} \r\n                        className=\"control-button\" \r\n                        onClick={togglePlayPause} \r\n                    />\r\n                    <img src=\"/img/skip_next.png\" alt=\"Next\" className=\"control-button-extra\" onClick={() => console.log('Next clicked')} />\r\n                </div>\r\n                <div className=\"track-info\">\r\n                    <img src=\"/img/album.jpg\" alt=\"Album Art\" className=\"album-art\" />\r\n                    <div className=\"track-details\" ref={containerRef}>\r\n                        <p className={`track-title ${isOverflowing ? 'marquee' : ''}`}>Collide - Hellberg & Deutgen vs Splitbreed (Astronaut & Barely Alive Remix)</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"controls-extra\">\r\n                    <img src=\"/img/shuffle.png\" alt=\"Shuffle\" className=\"control-button-extra\" onClick={() => console.log('Shuffle clicked')} />\r\n                    <img src=\"/img/repeat.png\" alt=\"Repeat\" className=\"control-button-extra\" onClick={() => console.log('Repeat clicked')} />\r\n                    <div \r\n                        className=\"volume-container\" \r\n                        onMouseEnter={handleMouseEnter}\r\n                        onMouseLeave={handleMouseLeave}\r\n                    >\r\n                        <img \r\n                            src={isMute ? \"/img/mute.png\" : \"/img/volume.png\"} \r\n                            alt={isMute ? \"Mute\" : \"Volume\"} \r\n                            className=\"control-button-extra\" \r\n                            onClick={toggleMute} \r\n                        />\r\n                        {isVolumeVisible && (\r\n                        <Volume\r\n                            volume={volume} \r\n                            setVolume={setVolume}\r\n                            onMouseEnter={handleMouseEnter} // 마우스가 패널에 진입했을 때\r\n                            onMouseLeave={handleMouseLeave} // 마우스가 패널을 떠났을 때\r\n                        />\r\n                )}\r\n                    </div>\r\n                    <img src=\"/img/playlist.png\" alt=\"Playlist\" className=\"control-button-extra\" onClick={() => console.log('Playlist clicked')} />\r\n                    <img src=\"/img/info.png\" alt=\"Info\" className=\"control-button-extra\" onClick={toggleDetail} />\r\n                    {/* Detail 컴포넌트 */}\r\n                    <Detail isOpen={isDetailOpen} setIsOpen={setIsDetailOpen} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MusicPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}