{"ast":null,"code":"import React,{useRef,useState,useEffect}from'react';import'./css/MusicPlayer.css';import Detail from'./Detail';import Volume from'./Volume';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MusicPlayer=()=>{const[isPlaying,setIsPlaying]=useState(false);// 재생 상태 관리\nconst[isMute,setIsMute]=useState(false);// 음소거 상태 관리\nconst[currentTime,setCurrentTime]=useState(0);// 현재 재생 시간\nconst duration=240;// 총 재생 시간 (초 단위)\nconst progressBarRef=useRef(null);// 진행바를 참조할 ref\nconst[isDragging,setIsDragging]=useState(false);// 드래그 상태 관리\nconst[isOverflowing,setIsOverflowing]=useState(false);const titleRef=useRef(null);const containerRef=useRef(null);// 텍스트가 넘치는지 확인하는 함수\nconst checkOverflow=()=>{if(titleRef.current&&containerRef.current){const titleWidth=titleRef.current.scrollWidth;const containerWidth=containerRef.current.offsetWidth;setIsOverflowing(titleWidth>containerWidth);// 제목이 컨테이너보다 긴지 확인\n}};useEffect(()=>{checkOverflow();// 초기 로드 시 실행\nwindow.addEventListener('resize',checkOverflow);// 윈도우 크기가 변경될 때마다 실행\nreturn()=>{window.removeEventListener('resize',checkOverflow);// 크기 변경 이벤트 리스너 해제\n};},[]);// 진행 바의 진행률을 계산\nconst progress=currentTime/duration*100;// 재생/정지 토글 함수\nconst togglePlayPause=()=>{setIsPlaying(!isPlaying);};// 음소거 토글 함수\nconst toggleMute=()=>{setIsMute(!isMute);};// 클릭 또는 드래그 시 재생 위치 변경 함수\nconst handleProgressChange=e=>{const progressBar=progressBarRef.current;const rect=progressBar.getBoundingClientRect();const offsetX=e.clientX-rect.left;// 클릭한 x좌표 계산\nconst newProgress=offsetX/rect.width*duration;// 클릭한 위치에 따른 새 재생 시간 계산\nsetCurrentTime(newProgress);// 재생 시간을 업데이트\n};// 드래그 시작\nconst handleMouseDown=e=>{setIsDragging(true);handleProgressChange(e);// 첫 클릭 시 재생 위치 변경\n};// 드래그 중\nconst handleMouseMove=e=>{if(isDragging){handleProgressChange(e);// 마우스 이동 중에 재생 위치 업데이트\n}};// 드래그 종료\nconst handleMouseUp=()=>{if(isDragging){setIsDragging(false);}};// 마우스 업 이벤트 리스너 추가\nuseEffect(()=>{if(isDragging){window.addEventListener('mousemove',handleMouseMove);window.addEventListener('mouseup',handleMouseUp);}else{window.removeEventListener('mousemove',handleMouseMove);window.removeEventListener('mouseup',handleMouseUp);}return()=>{window.removeEventListener('mousemove',handleMouseMove);window.removeEventListener('mouseup',handleMouseUp);};},[isDragging]);const[isDetailOpen,setIsDetailOpen]=useState(false);// Detail 패널 상태 관리\nconst toggleDetail=()=>{setIsDetailOpen(!isDetailOpen);//버튼 클릭시 Detail이 나옴\n};const[isVolumeVisible,setIsVolumeVisible]=useState(false);// 볼륨 패널 표시 상태\nconst[volume,setVolume]=useState(50);// 볼륨 상태 (0-100 범위)\nconst handleMouseEnter=()=>{// 볼륨 패널 보이기\nsetIsVolumeVisible(true);};const handleMouseLeave=()=>{// 볼륨 패널 숨기기\nsetIsVolumeVisible(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"music-player-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-container\",ref:progressBarRef,onClick:handleProgressChange// 진행바 클릭 이벤트 추가\n,onMouseDown:handleMouseDown// 드래그 시작\n,children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:{width:`${progress}%`}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"music-player\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/img/skip_previous.png\",alt:\"Previous\",className:\"control-button-extra\",onClick:()=>console.log('Previous clicked')}),/*#__PURE__*/_jsx(\"img\",{// 재생, 멈춤 버튼\nsrc:isPlaying?\"/img/pause.png\":\"/img/play.png\",alt:isPlaying?\"Pause\":\"Play\",className:\"control-button\",onClick:togglePlayPause}),/*#__PURE__*/_jsx(\"img\",{src:\"/img/skip_next.png\",alt:\"Next\",className:\"control-button-extra\",onClick:()=>console.log('Next clicked')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"track-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/img/album.jpg\",alt:\"Album Art\",className:\"album-art\"}),/*#__PURE__*/_jsx(\"div\",{className:\"track-details\",ref:containerRef,children:/*#__PURE__*/_jsx(\"p\",{className:`track-title ${isOverflowing?'marquee':''}`,children:\"Collide - Hellberg & Deutgen vs Splitbreed (Astronaut & Barely Alive Remix)\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls-extra\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/img/shuffle.png\",alt:\"Shuffle\",className:\"control-button-extra\",onClick:()=>console.log('Shuffle clicked')}),/*#__PURE__*/_jsx(\"img\",{src:\"/img/repeat.png\",alt:\"Repeat\",className:\"control-button-extra\",onClick:()=>console.log('Repeat clicked')}),/*#__PURE__*/_jsxs(\"div\",{className:\"volume-container\",onMouseEnter:handleMouseEnter,onMouseLeave:handleMouseLeave,children:[/*#__PURE__*/_jsx(\"img\",{src:isMute?\"/img/mute.png\":\"/img/volume.png\",alt:isMute?\"Mute\":\"Volume\",className:\"control-button-extra\",onClick:toggleMute}),isVolumeVisible&&/*#__PURE__*/_jsx(Volume,{volume:volume,setVolume:setVolume,onMouseEnter:handleMouseEnter// 마우스가 패널에 진입했을 때\n,onMouseLeave:handleMouseLeave// 마우스가 패널을 떠났을 때\n})]}),/*#__PURE__*/_jsx(\"img\",{src:\"/img/playlist.png\",alt:\"Playlist\",className:\"control-button-extra\",onClick:()=>console.log('Playlist clicked')}),/*#__PURE__*/_jsx(\"img\",{src:\"/img/info.png\",alt:\"Info\",className:\"control-button-extra\",onClick:toggleDetail}),/*#__PURE__*/_jsx(Detail,{isOpen:isDetailOpen,setIsOpen:setIsDetailOpen})]})]})]});};export default MusicPlayer;","map":{"version":3,"names":["React","useRef","useState","useEffect","Detail","Volume","jsx","_jsx","jsxs","_jsxs","MusicPlayer","isPlaying","setIsPlaying","isMute","setIsMute","currentTime","setCurrentTime","duration","progressBarRef","isDragging","setIsDragging","isOverflowing","setIsOverflowing","titleRef","containerRef","checkOverflow","current","titleWidth","scrollWidth","containerWidth","offsetWidth","window","addEventListener","removeEventListener","progress","togglePlayPause","toggleMute","handleProgressChange","e","progressBar","rect","getBoundingClientRect","offsetX","clientX","left","newProgress","width","handleMouseDown","handleMouseMove","handleMouseUp","isDetailOpen","setIsDetailOpen","toggleDetail","isVolumeVisible","setIsVolumeVisible","volume","setVolume","handleMouseEnter","handleMouseLeave","className","children","ref","onClick","onMouseDown","style","src","alt","console","log","onMouseEnter","onMouseLeave","isOpen","setIsOpen"],"sources":["C:/jsp/DITA-JSP/muse_Back/muse/src/components/MusicPlayer.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport './css/MusicPlayer.css';\r\nimport Detail from './Detail'\r\nimport Volume from './Volume'\r\n\r\nconst MusicPlayer = () => {\r\n    const [isPlaying, setIsPlaying] = useState(false); // 재생 상태 관리\r\n    const [isMute, setIsMute] = useState(false); // 음소거 상태 관리\r\n    const [currentTime, setCurrentTime] = useState(0); // 현재 재생 시간\r\n    const duration = 240; // 총 재생 시간 (초 단위)\r\n    const progressBarRef = useRef(null); // 진행바를 참조할 ref\r\n    const [isDragging, setIsDragging] = useState(false); // 드래그 상태 관리\r\n\r\n    const [isOverflowing, setIsOverflowing] = useState(false);\r\n    const titleRef = useRef(null);\r\n    const containerRef = useRef(null);\r\n\r\n    // 텍스트가 넘치는지 확인하는 함수\r\n    const checkOverflow = () => {\r\n        if (titleRef.current && containerRef.current) {\r\n            const titleWidth = titleRef.current.scrollWidth;\r\n            const containerWidth = containerRef.current.offsetWidth;\r\n            setIsOverflowing(titleWidth > containerWidth); // 제목이 컨테이너보다 긴지 확인\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        checkOverflow(); // 초기 로드 시 실행\r\n        window.addEventListener('resize', checkOverflow); // 윈도우 크기가 변경될 때마다 실행\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', checkOverflow); // 크기 변경 이벤트 리스너 해제\r\n        };\r\n    }, []);\r\n\r\n    // 진행 바의 진행률을 계산\r\n    const progress = (currentTime / duration) * 100;\r\n\r\n    // 재생/정지 토글 함수\r\n    const togglePlayPause = () => {\r\n        setIsPlaying(!isPlaying);\r\n    };\r\n\r\n    // 음소거 토글 함수\r\n    const toggleMute = () => {\r\n        setIsMute(!isMute);\r\n    };\r\n\r\n    // 클릭 또는 드래그 시 재생 위치 변경 함수\r\n    const handleProgressChange = (e) => {\r\n        const progressBar = progressBarRef.current;\r\n        const rect = progressBar.getBoundingClientRect();\r\n        const offsetX = e.clientX - rect.left; // 클릭한 x좌표 계산\r\n        const newProgress = (offsetX / rect.width) * duration; // 클릭한 위치에 따른 새 재생 시간 계산\r\n        setCurrentTime(newProgress); // 재생 시간을 업데이트\r\n    };\r\n    // 드래그 시작\r\n    const handleMouseDown = (e) => {\r\n        setIsDragging(true);\r\n        handleProgressChange(e); // 첫 클릭 시 재생 위치 변경\r\n    };\r\n\r\n    // 드래그 중\r\n    const handleMouseMove = (e) => {\r\n        if (isDragging) {\r\n            handleProgressChange(e); // 마우스 이동 중에 재생 위치 업데이트\r\n        }\r\n    };\r\n\r\n    // 드래그 종료\r\n    const handleMouseUp = () => {\r\n        if (isDragging) {\r\n            setIsDragging(false);\r\n        }\r\n    };\r\n\r\n    // 마우스 업 이벤트 리스너 추가\r\n    useEffect(() => {\r\n        if (isDragging) {\r\n            window.addEventListener('mousemove', handleMouseMove);\r\n            window.addEventListener('mouseup', handleMouseUp);\r\n        } else {\r\n            window.removeEventListener('mousemove', handleMouseMove);\r\n            window.removeEventListener('mouseup', handleMouseUp);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('mousemove', handleMouseMove);\r\n            window.removeEventListener('mouseup', handleMouseUp);\r\n        };\r\n    }, [isDragging]);\r\n\r\n    const [isDetailOpen, setIsDetailOpen] = useState(false); // Detail 패널 상태 관리\r\n\r\n    const toggleDetail = () => {\r\n        setIsDetailOpen(!isDetailOpen);\r\n        //버튼 클릭시 Detail이 나옴\r\n    };\r\n\r\n    const [isVolumeVisible, setIsVolumeVisible] = useState(false); // 볼륨 패널 표시 상태\r\n    const [volume, setVolume] = useState(50); // 볼륨 상태 (0-100 범위)\r\n\r\n    const handleMouseEnter = () => { // 볼륨 패널 보이기\r\n        setIsVolumeVisible(true);\r\n    };\r\n    const handleMouseLeave = () => { // 볼륨 패널 숨기기\r\n        setIsVolumeVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"music-player-container\">\r\n            {/* ProgressBar 통합 */}\r\n            <div \r\n                className=\"progress-bar-container\" \r\n                ref={progressBarRef}\r\n                onClick={handleProgressChange} // 진행바 클릭 이벤트 추가\r\n                onMouseDown={handleMouseDown} // 드래그 시작\r\n            >\r\n                <div className=\"progress-bar\" style={{ width: `${progress}%` }}></div>\r\n            </div>\r\n\r\n            <div className=\"music-player\">\r\n                <div className=\"controls\">\r\n                    <img src=\"/img/skip_previous.png\" alt=\"Previous\" className=\"control-button-extra\" onClick={() => console.log('Previous clicked')} />\r\n                    <img // 재생, 멈춤 버튼\r\n                        src={isPlaying ? \"/img/pause.png\" : \"/img/play.png\"} \r\n                        alt={isPlaying ? \"Pause\" : \"Play\"} \r\n                        className=\"control-button\" \r\n                        onClick={togglePlayPause} \r\n                    />\r\n                    <img src=\"/img/skip_next.png\" alt=\"Next\" className=\"control-button-extra\" onClick={() => console.log('Next clicked')} />\r\n                </div>\r\n                <div className=\"track-info\">\r\n                    <img src=\"/img/album.jpg\" alt=\"Album Art\" className=\"album-art\" />\r\n                    <div className=\"track-details\" ref={containerRef}>\r\n                        <p className={`track-title ${isOverflowing ? 'marquee' : ''}`}>Collide - Hellberg & Deutgen vs Splitbreed (Astronaut & Barely Alive Remix)</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"controls-extra\">\r\n                    <img src=\"/img/shuffle.png\" alt=\"Shuffle\" className=\"control-button-extra\" onClick={() => console.log('Shuffle clicked')} />\r\n                    <img src=\"/img/repeat.png\" alt=\"Repeat\" className=\"control-button-extra\" onClick={() => console.log('Repeat clicked')} />\r\n                    <div \r\n                        className=\"volume-container\" \r\n                        onMouseEnter={handleMouseEnter}\r\n                        onMouseLeave={handleMouseLeave}\r\n                    >\r\n                        <img \r\n                            src={isMute ? \"/img/mute.png\" : \"/img/volume.png\"} \r\n                            alt={isMute ? \"Mute\" : \"Volume\"} \r\n                            className=\"control-button-extra\" \r\n                            onClick={toggleMute} \r\n                        />\r\n                        {isVolumeVisible && (\r\n                        <Volume\r\n                            volume={volume} \r\n                            setVolume={setVolume}\r\n                            onMouseEnter={handleMouseEnter} // 마우스가 패널에 진입했을 때\r\n                            onMouseLeave={handleMouseLeave} // 마우스가 패널을 떠났을 때\r\n                        />\r\n                )}\r\n                    </div>\r\n                    <img src=\"/img/playlist.png\" alt=\"Playlist\" className=\"control-button-extra\" onClick={() => console.log('Playlist clicked')} />\r\n                    <img src=\"/img/info.png\" alt=\"Info\" className=\"control-button-extra\" onClick={toggleDetail} />\r\n                    {/* Detail 컴포넌트 */}\r\n                    <Detail isOpen={isDetailOpen} setIsOpen={setIsDetailOpen} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MusicPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}